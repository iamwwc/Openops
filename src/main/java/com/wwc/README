there are three special classes

ConnectionHandler :maintain two endpoints

ChannelContext  it maintain all objects(Instance,ConnectionHandler) at runtime

WrappedSocket(or ConnectableSocket) : it offer operations about socket, wrap with Vertx.NetSocket


我觉着不应该使用ConnectionHandler,inbound或者outbound应该自己实现close，自己清除资源，而Inbound或者Outbound
只需要维护Endpoint（Outbound or Inbound）的引用就行了，MainController不应该维护具体的Inbound或者Outbound
对象

这样只需要考虑WrappedSocket（ ConnectionableSocket）和ChannelContext

MainConfig  -> MainController ->{
    |                                InboundConfig: only for this special MainController
    |                                OutboundConfig: all Outbound which supported
    ^-------------<---------<------- MainConfig: original config
                                }

每个MainController有一个单独的ID，用来唯一关联自身的InboundConfig和OutboundConfig